// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TrabajoPracticas.Models;

namespace TrabajoPracticas.Migrations
{
    [DbContext(typeof(ReviewZoneContext))]
    [Migration("20200408120349_m1")]
    partial class m1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("TrabajoPracticas.Models.Anime", b =>
                {
                    b.Property<int>("AnimeId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Dur_cap");

                    b.Property<bool>("Emision");

                    b.Property<string>("Generos");

                    b.Property<int>("Num_cap");

                    b.Property<string>("Op_personal");

                    b.Property<string>("Productora");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("Titulo");

                    b.Property<int>("UsuarioId");

                    b.Property<int>("Val_personal");

                    b.HasKey("AnimeId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Animes");

                    b.HasData(
                        new
                        {
                            AnimeId = 1,
                            Dur_cap = "20 min",
                            Emision = false,
                            Generos = "Aventura, Acción",
                            Num_cap = 26,
                            Op_personal = "Muy entretenido",
                            Productora = "Banday Visual",
                            Sinopsis = "Las aventuras futuristas de un cazarrecompensas y sus compañeros en la búsqueda de criminales.",
                            Titulo = "Cowboy Bebop",
                            UsuarioId = 1,
                            Val_personal = 9
                        });
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Manga_Comic", b =>
                {
                    b.Property<int>("Manga_ComicId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Artistas");

                    b.Property<string>("Autor");

                    b.Property<string>("Editorial");

                    b.Property<bool>("Emision");

                    b.Property<string>("Generos");

                    b.Property<string>("Op_personal");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("Titulo");

                    b.Property<int>("Tomos");

                    b.Property<int>("UsuarioId");

                    b.Property<int>("Val_personal");

                    b.HasKey("Manga_ComicId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Mangas_Comics");

                    b.HasData(
                        new
                        {
                            Manga_ComicId = 1,
                            Artistas = "Kentaro Miura",
                            Autor = "Kentaro Miura",
                            Editorial = "Hakushenka",
                            Emision = true,
                            Generos = "Acción, aventura, demonios",
                            Op_personal = "Maravilloso",
                            Sinopsis = "Ambientado en una tierra inspirada y con amplias similitudes a la Europa medieval, en el cual se cuenta la historia de Guts",
                            Titulo = "Berserk",
                            Tomos = 40,
                            UsuarioId = 1,
                            Val_personal = 10
                        });
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Pelicula", b =>
                {
                    b.Property<int>("PeliculaId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Duracion");

                    b.Property<string>("Generos");

                    b.Property<string>("Op_personal");

                    b.Property<string>("Reparto");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("Titulo");

                    b.Property<int>("UsuarioId");

                    b.Property<int>("Val_personal");

                    b.HasKey("PeliculaId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Peliculas");

                    b.HasData(
                        new
                        {
                            PeliculaId = 1,
                            Duracion = "139 min",
                            Generos = "Drama, Thriller, Sátira",
                            Op_personal = "Muy buena",
                            Reparto = "Edward Norton, Brad Pitt",
                            Sinopsis = "Un joven hastiado de su gris y monótona vida lucha contra el insomnio. En un viaje conoce a un carismático vendedor de jabón que sostiene una teoría muy particular",
                            Titulo = "El club de la lucha",
                            UsuarioId = 1,
                            Val_personal = 10
                        });
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Serie", b =>
                {
                    b.Property<int>("SerieId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Direccion");

                    b.Property<string>("Duracion_cap");

                    b.Property<bool>("Emision");

                    b.Property<string>("Generos");

                    b.Property<string>("Guion");

                    b.Property<int>("Num_capitulos");

                    b.Property<string>("Op_personal");

                    b.Property<string>("Productora");

                    b.Property<string>("Reparto");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("Titulo");

                    b.Property<int>("UsuarioId");

                    b.Property<int>("Val_personal");

                    b.HasKey("SerieId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Series");

                    b.HasData(
                        new
                        {
                            SerieId = 1,
                            Direccion = "Dan Harmon",
                            Duracion_cap = "20 min",
                            Emision = false,
                            Generos = "Comedia",
                            Guion = "Dan Harmon",
                            Num_capitulos = 35,
                            Op_personal = "Muy divertida",
                            Productora = "NBC",
                            Reparto = "Joel McHale, Danny Pudi, Gillian Jacobs, Chevy Chase, Alison Brie",
                            Sinopsis = "Un abogado que es revocado debe regresar a la universidad el grupo que junta comienza a reunirse y a aprender uno del otro.",
                            Titulo = "Community",
                            UsuarioId = 1,
                            Val_personal = 9
                        });
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Usuario", b =>
                {
                    b.Property<int>("UsuarioId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Apellidos");

                    b.Property<string>("Correo");

                    b.Property<string>("Nombre");

                    b.Property<string>("Nombreusuario");

                    b.Property<string>("Password");

                    b.HasKey("UsuarioId");

                    b.ToTable("Usuario");

                    b.HasData(
                        new
                        {
                            UsuarioId = 1,
                            Apellidos = "Hernandez",
                            Correo = "joheto@gmail.com",
                            Nombre = "Josep",
                            Nombreusuario = "joheto",
                            Password = "1234"
                        });
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Videojuego", b =>
                {
                    b.Property<int>("VideojuegoId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Company");

                    b.Property<string>("Duracion_aprox");

                    b.Property<string>("Generos");

                    b.Property<string>("Op_personal");

                    b.Property<string>("Plataformas");

                    b.Property<string>("Requisitos");

                    b.Property<string>("Sinopsis");

                    b.Property<string>("Titulo");

                    b.Property<int>("UsuarioId");

                    b.Property<int>("Val_personal");

                    b.HasKey("VideojuegoId");

                    b.HasIndex("UsuarioId");

                    b.ToTable("Videojuegos");

                    b.HasData(
                        new
                        {
                            VideojuegoId = 1,
                            Company = "2K",
                            Duracion_aprox = "14/20 horas",
                            Generos = "Shooter",
                            Op_personal = "Muy interesante",
                            Plataformas = "PC, PlayStation, Xbox",
                            Requisitos = "Procesador de doble núcleo a 3 GHz, Memoria: 2 GB. Tarjeta de vídeo: Tarjeta de vídeo con 512 MB de RAM(NVidia(R) Geforce(R) 7900 GT o superior).",
                            Sinopsis = "Ambientado durante una ucronía del año 1960, en Rapture, una ciudad distópica/antiutópica ficticia en el fondo del océano Atlántico.",
                            Titulo = "Bioshock",
                            UsuarioId = 1,
                            Val_personal = 9
                        });
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Anime", b =>
                {
                    b.HasOne("TrabajoPracticas.Models.Usuario", "Usuario")
                        .WithMany("Animes")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Manga_Comic", b =>
                {
                    b.HasOne("TrabajoPracticas.Models.Usuario", "Usuario")
                        .WithMany("Mangas_Comics")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Pelicula", b =>
                {
                    b.HasOne("TrabajoPracticas.Models.Usuario", "Usuario")
                        .WithMany("Peliculas")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Serie", b =>
                {
                    b.HasOne("TrabajoPracticas.Models.Usuario")
                        .WithMany("Series")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("TrabajoPracticas.Models.Videojuego", b =>
                {
                    b.HasOne("TrabajoPracticas.Models.Usuario", "Usuario")
                        .WithMany("Videojuegos")
                        .HasForeignKey("UsuarioId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
